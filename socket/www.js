!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=5)}([function(e,n,t){e.exports={corsConfig:{origin:["http://192.168.2.208","http://localhost:5900","http://localhost:5900","http://localhost:5905","http://localhost:5600","http://localhost:8100"],methods:["GET","PUT","POST","HEAD","PATCH","DELETE","OPTIONS"],credentials:!0,proxy:!0},nodeServer:{address:"",port:"3001"},CacheClusterUris:["mongodb://10.199.4.22:27017,10.199.4.23:27017,10.199.4.24:27017/yb_session_test?replicaSet=my_repl"],SessionClusterUris:["mongodb://10.199.4.22:27017,10.199.4.23:27017,10.199.4.24:27017/yb_session_test?replicaSet=my_repl"],sessionServer:{uri:["mongodb://10.199.4.22:27017,10.199.4.23:27017,10.199.4.24:27017/yb_session_test?replicaSet=my_repl"],options:{useNewUrlParser:!0}},cacheServer:{uri:["mongodb://10.199.4.22:27017,10.199.4.23:27017,10.199.4.24:27017/yb_session_test?replicaSet=my_repl"],options:{useNewUrlParser:!0,autoIndex:!1,reconnectTries:Number.MAX_VALUE,reconnectInterval:500,poolSize:10,bufferMaxEntries:0}},oracledb:{queueRequests:!0,autoCommit:!1,poolIncrement:1,poolMax:0,poolMin:5,poolPingInterval:60,poolTimeout:60,queueTimeout:0},poolAttrs:{connectionString:"10.199.4.26:1521/orcl",user:"ccsyb",password:"ccsyb",poolIncrement:1,homogeneous:!0},imgs:"data/img/",isDebug:"production"===t(1)().get("env")}},function(e,n){e.exports=require("express")},function(e,n){e.exports=require("debug")},function(e,n,t){const r=t(0),o=t(4),i=t(9);let s=null,c={};e.exports={init:()=>new Promise((e,n)=>{const t={useNewUrlParser:!0,useCreateIndex:!0,useFindAndModify:!1,autoIndex:!1,reconnectTries:Number.MAX_VALUE,reconnectInterval:1e3,poolSize:20,bufferMaxEntries:0,connectTimeoutMS:3e4,socketTimeoutMS:36e4,family:4},i=r.CacheClusterUris[0];o.createConnection(i,t).then(n=>{s=n,e()}).catch(e=>n(e))}),createIndexes:(e,n=null)=>{l(e).createIndexes(i[e].index(n||{expires:1},{expireAfterSeconds:0},{background:!0})).then().catch(e=>{log.writeFile(e,ERR_FILE_NAME),console.error(e)})},ensureIndexes:(e,n=null)=>{l(e).ensureIndexes(i[e].index(n||{expires:1},{background:!0})).then().catch(e=>{log.writeFile(e,ERR_FILE_NAME),console.error(e)})},ensureIndexes_ex:(e,n=null,t)=>{l(e).ensureIndexes(i[e].index(n||{expires:1},{expireAfterSeconds:t},{background:!0})).then().catch(e=>{log.writeFile(e,ERR_FILE_NAME),console.error(e)})},save:(e,n)=>new(l(e))(n).save().then(e=>1).catch(t=>(log.writeFile(e+"---"+JSON.stringify(n),ERR_FILE_NAME).then(e=>{log.writeFile(t,ERR_FILE_NAME).then()}),-1)),insertMany:async(e,n)=>{try{let t=l(e);return(await t.insertMany(n)).length}catch(n){return log.writeFile(e,ERR_FILE_NAME).then(e=>{log.writeFile(n,ERR_FILE_NAME).then()}),n}},select:(e,n)=>l(e).find(n).then(e=>e).catch(e=>(log.writeFile(e,ERR_FILE_NAME),[])),selectTest:(e,n,t)=>l(e).find(n,t).then(e=>e).catch(e=>(log.writeFile(e,ERR_FILE_NAME),[])),selectAndSort:(e,n,t={})=>l(e).find(n).sort(t).then(e=>e).catch(e=>(log.writeFile(e,ERR_FILE_NAME),[])),selectLastOne:(e,n)=>l(e).find(n).sort({_id:-1}).limit(1).then(e=>e).catch(e=>(log.writeFile(e,ERR_FILE_NAME),[])),selectByIdAndUpdate:(e,n,t)=>l(e).findById(n).then(e=>{if(e){for(let n in t)e[n]=t[n];return e.save().then(e=>1).catch(e=>{throw e})}return 0}).catch(e=>(log.writeFile(e,ERR_FILE_NAME),-1)),remove:(e,n)=>l(e).remove(n).then(e=>e||0).catch(e=>(console.error(e),-1)),delete:e=>l(e).deleteMany({}).then(e=>e||0).catch(e=>(console.error(e),-1)),findOneAndUpdate:(e,n,t)=>l(e).findOneAndUpdate(n,{$set:t},{upsert:!1,new:!0}).then(e=>e?1:0).catch(e=>(log.writeFile(e,ERR_FILE_NAME),-1)),findOneAndUpdateOrInsert:(e,n,t)=>l(e).findOneAndUpdate(n,{$set:t},{upsert:!0,new:!0}).then(e=>e?1:0).catch(e=>(log.writeFile(e,ERR_FILE_NAME),-1)),updateMany:(e,n,t)=>l(e).updateMany(n,{$set:t},{upsert:!1,new:!0}).then(e=>e?1:0).catch(e=>(log.writeFile(e,ERR_FILE_NAME),-1))};const l=e=>null===s?(log.writeFile(msg.ERR3,ERR_FILE_NAME),console.error(msg.ERR3),null):(c[e]||(c[e]=s.model(e,i[e])),c[e])},function(e,n){e.exports=require("mongoose")},function(e,n,t){t(6),t(2)("express:sdr")("Application booting");const r=t(0),o=r.nodeServer.port,i=r.nodeServer.address;try{t(7).then((function(){t(11).createServer(t(12)).listen(o,i).on("error",e=>{throw e}).on("listening",()=>{console.log("APP has been started successfully!"),console.log("Listening on "+o)}).on("exit",()=>{console.log("On exit!!!")})}))}catch(e){console.log(e)}},function(e,n){e.exports=require("colors")},function(e,n,t){const r=t(8);t(2)("express:sdr"),t(3);t(10).MongoClient;t(0);e.exports=new r(e=>{console.log("#############Detecting Dependency Servers############"),r.all([]).then(()=>{console.log("##########Dependency Server Detect Completely########\n"),e()})})},function(e,n){e.exports=require("promise")},function(e,n,t){const r=t(4).Schema,o=new r({key:String,value:String,expires:Date}),i=new r({code:String,unionid:String,status:String,tel:String,createdAt:{type:Date,expires:30}}),s=new r({creditCode:String,chainName:String}),c=new r({bindId:String,bindName:String}),l=new r({organId:String,organName:String,year:String,January:String,February:String,March:String,April:String,May:String,June:String,July:String,August:String,September:String,October:String,November:String,December:String}),a=new r({_id:String,session:Object,expires:Date}),u=new r({geRenBh:String,jiaTingBh:String,xingMing:String,shenFenZh:String,tel:String,email:String,canBaoLx:String,canBaoZt:String,canBaoDw:String,shiYongBz:String,renYuanLbBm:String,renYuanLbMc:String,color1:String,color2:String,zuoFeiBz:String,unionid:String,bindId:String,threadId:String,openid:String,ybUserId:String,selfSign:String,workDate:String,expires:Date}),g=new r({creditCode:String,organName:String,pharmacistName:String,pharmacistIDCard:String,status:String}),d=new r({creditCode:String,name:String,address:String,member:String,setDate:String,scope:String}),p=new r({geRenBh:String,jiaTingBh:String,xingMing:String,shenFenZh:String,tel:String,mobile:String,yiBaoBh:String,email:String,canBaoLx:String,canBaoZt:String,canBaoDw:String,danWeiBh:String,empEnttCodg:String,shiYongBz:String,renYuanLbBm:String,renYuanLbMc:String,color1:String,color2:String,zuoFeiBz:String,unionid:String,openid:String,bindId:String,threadId:String,ybUserId:String,workDate:String,insuAdmdvs:String,poolareaNo:String,crtInsuDate:String,psnInsuRltsId:String,selfSign:String,auth_code:String,channel:String,create_time:String,update_time:String,is_delete:String});e.exports={pharmacistInfo:g,qrCodeCcsyb:i,userInfo:u,organInfo:d,chainCodeInfo:s,bindOrgan:c,voucher:l,ldjgsession:a,sysParams:o,pub_user_info:p}},function(e,n){e.exports=require("mongodb")},function(e,n){e.exports=require("http")},function(e,n,t){const r=t(1)(),o=t(13),i=t(14),s=t(15),c=t(16),l=t(17),a=(t(18)(c),t(0));r.use(o()),r.use(i(a.corsConfig)),r.use(t(19)(l.secret)),r.use(s.urlencoded({limit:"50mb",extended:!1})),r.use(s.json({limit:"50mb"})),t(20)(r),r.use((e,n,t)=>{console.log(e.url),console.log(e.method);const r=new Error("Not Found"+e.url+"?");r.status=404,n.json({respCode:"404"}),t(r)}),r.use((e,n,t)=>{t.locals.message=e.message,t.locals.error="development"===n.app.get("env")?e:{},t.end("error")}),e.exports=r},function(e,n){e.exports=require("helmet")},function(e,n){e.exports=require("cors")},function(e,n){e.exports=require("body-parser")},function(e,n){e.exports=require("express-session")},function(e,n){e.exports={resave:!1,saveUninitialized:!1,rolling:!0,key:"booom",secret:"qwerasdf",cookie:{path:"/",httpOnly:!0,secure:!1,maxAge:6e5}}},function(e,n){e.exports=require("connect-mongo")},function(e,n){e.exports=require("cookie-parser")},function(e,n,t){e.exports=e=>{e.options("/",(e,n)=>n.status(200).end()),e.get("/",(e,n)=>{n.status(404).end()});e.use("/socket-test",t(21))}},function(e,n,t){const r=t(1).Router(null),o=(t(3),t(22),new(t(24))),i=t(25),s=t(26),c=[];let l=null;new(0,s.Server)({port:443}).on("connection",(function(e){l=e;const n=i(o.next(),"dec");console.log(`ONE USER CONNECTED NO:${n}`),c.push({socketId:n,target:e}),l.send(JSON.stringify({type:"no",data:n}));for(let e=0;e<c.length;e++)c[e].target.send(JSON.stringify({type:"updateUser",users:c.map(e=>e.socketId)})),c[e].target.send(JSON.stringify({type:"joinRoom",msg:`用户:${n}加入房间`}));e.on("message",(function(e){console.log(e)})),e.on("close",(function(e){const t=c.findIndex(e=>e.socketId===n);c.splice(t,1);for(let e=0;e<c.length;e++)c[e].target.send(JSON.stringify({type:"joinRoom",msg:`用户:${n}离开房间`}));console.log(c.length),console.log("[SERVER] close()",e)}))})),e.exports=r},function(e,n,t){const r=t(0),o=t(23),i="-4006 连接池对象未初始化";let s=null;const c=r.oracledb,l=r.poolAttrs;o.fetchAsString=[o.CLOB];for(const e in c)o.key=c.key;function a(e){e.close({drop:!0}).then(()=>{console.log("connection closed")}).catch(e=>{log.writeFile(e,ERR_FILE_NAME)})}function u(e,n,t){let r=[],o={};for(let e in n)r.push(":"+e),o[e]=n[e];for(let e in t)r.push(":"+e),o[e]=t[e];return{plsql:`BEGIN ${e}(${r.join(",")}); END;`,params:o}}function g(e){e.release().then(()=>{console.log("connection release")}).catch(e=>{log.writeFile(e,ERR_FILE_NAME)})}e.exports={inputParamsStringCollection:function(e){return{type:o.STRING,dir:o.BIND_IN,val:e}},executeProcedure:function(e,n,t){return new Promise((r,c)=>{if(null===s)return void c(i);const d=u(e,n,t);s.getConnection().then(e=>{e.execute(d.plsql,d.params).then(n=>{let o=[];for(let e in t)n.outBinds[e]&&o.push(n.outBinds[e].getRows(1e4));Promise.all(o).then(e=>{r(e)}).then(()=>{let r=[];for(let e in t)r.push(n.outBinds[e].close());Promise.all(r).then(n=>{g(e)})}).catch(n=>{console.log(n),a(e),c(n.toString())})}).catch(n=>{console.error("execute() error",n),n&&n.toString()&&n.toString().indexOf("ORA-04068")>0?s.close(5,(function(e){new Promise((e,n)=>{o.createPool({user:l.user,password:l.password,connectString:l.connectionString,poolIncrement:10,poolMax:90,poolMin:5,poolTimeout:60,queueTimeout:6e3}).then(n=>{s=n,console.log("[oracle pool] has been created"),e()}).catch(e=>{console.log(e),n(e)})}).then()})):a(e),c(n.toString())})}).catch(e=>{console.error("getConnection() error",e),c(e.toString())})})},outputParamsCursor:function(e){let n={};for(let t=0;t<e;t++)n["output_"+t]={type:o.CURSOR,dir:o.BIND_OUT};return n},inputParamsVal:function(e){return{val:e}}}},function(e,n){e.exports=require("oracledb")},function(e,n){e.exports=require("flake-idgen")},function(e,n){e.exports=require("biguint-format")},function(e,n){e.exports=require("ws")}]);